# Job
job.factory.class=org.apache.samza.job.local.ThreadJobFactory
job.name=tranquility

# YARN
yarn.package.path=file://${basedir}/target/${project.artifactId}-${pom.version}-dist.tar.gz

# Task
task.class=com.rico.samza.NoOpTask
task.inputs=kafka.clicks1
task.window.ms=10000
task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.system=kafka
# Normally, this would be 3, but we have only one broker.
task.checkpoint.replication.factor=1


metrics.reporters=snapshot,jmx
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.snapshot.stream=kafka.metrics
metrics.reporter.jmx.class=org.apache.samza.metrics.reporter.JmxReporterFactory

# Serializers
serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory

## Systems
#systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
#systems.kafka.samza.msg.serde=json
#systems.kafka.consumer.zookeeper.connect=localhost:2181/
#systems.kafka.consumer.auto.offset.reset=largest
#systems.kafka.producer.bootstrap.servers=localhost:9092

systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.msg.serde=json
systems.kafka.consumer.zookeeper.connect=localhost:2181/
systems.kafka.consumer.auto.offset.reset=largest
systems.kafka.producer.metadata.broker.list=localhost:9092
systems.kafka.producer.producer.type=sync

# Normally, we'd set this much higher, but we want things to look snappy in the demo.
systems.kafka.producer.batch.num.messages=1
systems.kafka.streams.metrics.samza.msg.serde=metrics


systems.druid.samza.factory=com.metamx.tranquility.samza.BeamSystemFactory
systems.druid.beam.factory=com.rico.samza.DruidLoader
systems.druid.beam.batchSize=2000
systems.druid.beam.maxPendingBatches=5